//
//  TokenCryptor.h
//  kidwatchapp
//
//  Created by tao.wang on 16/8/16.
//  Copyright © 2016年 zhengying. All rights reserved.
//

#import <Foundation/Foundation.h>

/*
 
 Some definitions
 There are 3 parameters in the new token solution:
 1. Sign: It's a 8 bytes' random number generated by client. 
 2. Timestamp: the client time with 8 bytes.
 3. Token: the token calculated based on sign & timestamp
 
 
 How to calculate token
 -----------------------
 token = base64(aes128(uid))
 Structure of aes key:
 +---8bytes---+--2bytes--+--4bytes--+---2bytes---+
 |    n       | t_H2     | signH4   |  Factor2   |
 Structure of iv:
 +---8bytes---+--2bytes--+--4bytes--+---2bytes---+
 |    n       | t_L2     | signL4   |   Factor1  |
 
 1. Split the sign into 2 parts: high 4 bytes are called signH4, low 4 bytes are called signL4;
 2. Generate 2 factors as the old solution based on signH4 and signL4. We called factor based on signH4 factor1, signL4 factor2
 3. Do '&' operate for each bytes of timestamp called n It means n is:
 byte1(n) = byte1(timestamp) & byte2(timestamp) byte2(n) = byte2(timestamp) & byte3(timestamp)
 .......
 byte8(n) = byte8(timestamp) & byte1(timestamp)
 4. The high 2 bytes of timestamp called t_H2, the low 2 bytes of timestamp called t_L2 4. Fill the bytes as the structures mentioned before. Get the aes key and iv.
 5. Use this aes key and iv to encrypt uid, called aes_data.
 6. Use standard base64 to encode aes_data encrypted data, called token
 Notices:
 About the bytes ending method, I mean if big endian or small endian, please refer the
 sample code in the email.
 Where to put these parameters
 Put the sign, timestamp and token into “Authorization” of http header.
 Like Authorization:sign=xxxxxxxxx;timestamp=yyyyyyyyy;token=zzzzzzzzzz Notices:
 1. sign need to convert to string and split with character '.' for each byte.
 Then convert each byte into decimal format.
 For example:
 if sign is 0x1122334455667788, the sign fill into the header should be “17.34.51...........”
 2.DO NOT remove the access_token in the parameter of the oldest solution.(Send the access_token got by the login response back to the server)
 
 */

@interface AuthenCryptor : NSObject

+ (NSString *)tokenWithUid:(NSData *)uid;
@end
